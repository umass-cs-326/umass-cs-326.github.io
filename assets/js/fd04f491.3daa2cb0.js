"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8047],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),u=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,g=d["".concat(s,".").concat(m)]||d[m]||p[m]||l;return n?o.createElement(g,a(a({ref:t},c),{},{components:n})):o.createElement(g,a({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,a=new Array(l);a[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:r,a[1]=i;for(var u=2;u<l;u++)a[u]=n[u];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},16331:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var o=n(87462),r=(n(67294),n(3905));const l={},a="Node and Mongo Tutorial",i={unversionedId:"lectures/no-sql/node-mongo-tut",id:"lectures/no-sql/node-mongo-tut",title:"Node and Mongo Tutorial",description:"Prerequisites",source:"@site/docs/03-lectures/19-no-sql/node-mongo-tut.md",sourceDirName:"03-lectures/19-no-sql",slug:"/lectures/no-sql/node-mongo-tut",permalink:"/docs/lectures/no-sql/node-mongo-tut",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Atlas Tutorial",permalink:"/docs/lectures/no-sql/atlas-tut"},next:{title:"L20 Authentication",permalink:"/docs/lectures/auth/"}},s={},u=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Setting up a MongoDB Atlas Cluster",id:"setting-up-a-mongodb-atlas-cluster",level:2},{value:"Installing the MongoDB Node.js Driver",id:"installing-the-mongodb-nodejs-driver",level:2},{value:"Connecting to MongoDB Atlas",id:"connecting-to-mongodb-atlas",level:2},{value:"Using MongoDB Atlas from Node.js",id:"using-mongodb-atlas-from-nodejs",level:2},{value:"Conclusion",id:"conclusion",level:2}],c={toc:u};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"node-and-mongo-tutorial"},"Node and Mongo Tutorial"),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"Before you get started, you'll need to have the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Node.js installed on your machine"),(0,r.kt)("li",{parentName:"ul"},"An account on MongoDB Atlas")),(0,r.kt)("h2",{id:"setting-up-a-mongodb-atlas-cluster"},"Setting up a MongoDB Atlas Cluster"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Sign in to your MongoDB Atlas account and create a new cluster."),(0,r.kt)("li",{parentName:"ol"},"Choose a cloud provider and region for your cluster."),(0,r.kt)("li",{parentName:"ol"},"Select the cluster tier and other options as desired."),(0,r.kt)("li",{parentName:"ol"},"Create a new database user with appropriate permissions."),(0,r.kt)("li",{parentName:"ol"},"Whitelist your IP address to allow access to the cluster."),(0,r.kt)("li",{parentName:"ol"},"Get the connection string for your cluster.")),(0,r.kt)("h2",{id:"installing-the-mongodb-nodejs-driver"},"Installing the MongoDB Node.js Driver"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Open a terminal or command prompt and navigate to your project directory."),(0,r.kt)("li",{parentName:"ol"},"Install the MongoDB Node.js driver using the following command:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install mongodb\n")),(0,r.kt)("h2",{id:"connecting-to-mongodb-atlas"},"Connecting to MongoDB Atlas"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create a new file called ",(0,r.kt)("inlineCode",{parentName:"li"},"app.js")," in your project directory."),(0,r.kt)("li",{parentName:"ol"},"Import the ",(0,r.kt)("inlineCode",{parentName:"li"},"mongodb")," module and create a ",(0,r.kt)("inlineCode",{parentName:"li"},"MongoClient")," object:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"const MongoClient = require('mongodb').MongoClient;\n")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Set up the connection string to your MongoDB Atlas cluster:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"const url = 'mongodb+srv://<username>:<password>@<cluster>.mongodb.net/test?retryWrites=true&w=majority';\n")),(0,r.kt)("p",null,"Be sure to replace ",(0,r.kt)("inlineCode",{parentName:"p"},"<username>"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"<password>"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"<cluster>")," with the appropriate values for your cluster."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Connect to the MongoDB Atlas cluster using the ",(0,r.kt)("inlineCode",{parentName:"li"},"MongoClient")," object:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"MongoClient.connect(url, { useNewUrlParser: true, useUnifiedTopology: true }, function(err, client) {\n  if (err) throw err;\n  console.log('Connected to MongoDB Atlas');\n  // ...\n});\n")),(0,r.kt)("h2",{id:"using-mongodb-atlas-from-nodejs"},"Using MongoDB Atlas from Node.js"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Once you've connected to your MongoDB Atlas cluster, you can perform various operations on your database. For example, you can insert a new document into a collection:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"const db = client.db('mydatabase');\nconst collection = db.collection('mycollection');\nconst document = { name: 'John Doe', age: 30, city: 'New York' };\ncollection.insertOne(document, function(err, result) {\n  if (err) throw err;\n  console.log('Inserted document:', result.ops[0]);\n});\n")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"You can also query data from your database:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"collection.find({ age: { $gt: 25 } }).toArray(function(err, docs) {\n  if (err) throw err;\n  console.log('Found documents:', docs);\n});\n")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Finally, don't forget to close the connection to your MongoDB Atlas cluster when you're done:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"client.close();\n")),(0,r.kt)("h2",{id:"conclusion"},"Conclusion"),(0,r.kt)("p",null,"Using MongoDB Atlas from Node.js is a straightforward process. By following the steps outlined in this tutorial, you can set up a new cluster, connect to it from Node.js, and perform various operations on your database."))}d.isMDXComponent=!0}}]);