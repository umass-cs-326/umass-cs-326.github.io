"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5914],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var o=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=o.createContext({}),d=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=d(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(n),m=i,h=u["".concat(s,".").concat(m)]||u[m]||p[m]||r;return n?o.createElement(h,a(a({ref:t},c),{},{components:n})):o.createElement(h,a({ref:t},c))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,a=new Array(r);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:i,a[1]=l;for(var d=2;d<r;d++)a[d]=n[d];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},17717:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var o=n(87462),i=(n(67294),n(3905));const r={author:"Rajasi-Desai",tags:["exercise","assignment"]},a="Ex5: Decoder Web Page",l={unversionedId:"exercises/decoder-web-page/index",id:"exercises/decoder-web-page/index",title:"Ex5: Decoder Web Page",description:"Information",source:"@site/docs/05-exercises/05-decoder-web-page/index.md",sourceDirName:"05-exercises/05-decoder-web-page",slug:"/exercises/decoder-web-page/",permalink:"/docs/exercises/decoder-web-page/",draft:!1,tags:[{label:"exercise",permalink:"/docs/tags/exercise"},{label:"assignment",permalink:"/docs/tags/assignment"}],version:"current",frontMatter:{author:"Rajasi-Desai",tags:["exercise","assignment"]},sidebar:"tutorialSidebar",previous:{title:"Ex4: Decoder Ring Class",permalink:"/docs/exercises/decoder-ring-class/"},next:{title:"Ex6: Interactive Decoder Web Page",permalink:"/docs/exercises/interactive-decoder/"}},s={},d=[{value:"Information",id:"information",level:2},{value:"Submission",id:"submission",level:2},{value:"Overview",id:"overview",level:2},{value:"Starter Kit",id:"starter-kit",level:2},{value:"TODO #1: User Interface",id:"todo-1-user-interface",level:2},{value:"TODO #2: Application Behavior",id:"todo-2-application-behavior",level:2}],c={toc:d};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,o.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"ex5-decoder-web-page"},"Ex5: Decoder Web Page"),(0,i.kt)("h2",{id:"information"},"Information"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Visit Moodle and follow the GitHub Classroom assignment link."),(0,i.kt)("li",{parentName:"ul"},"See the ",(0,i.kt)("a",{parentName:"li",href:"/docs/information/schedule/#exercises"},"calendar")," for due\ndates.")),(0,i.kt)("h2",{id:"submission"},"Submission"),(0,i.kt)("p",null,"You must submit the following to complete this assignment:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Push all changes to your GitHub repository before the due date. You\ndo not need to submit anything to Moodle. We will take your last\ncommit before the deadline as your submission."),(0,i.kt)("li",{parentName:"ul"},"Complete the Grade Reflection survey associated with this assignment\non Moodle.")),(0,i.kt)("p",null,"See the ",(0,i.kt)("a",{parentName:"p",href:"/docs/information/syllabus/#exercises"},"course syllabus")," for\nadditional information on exercise assignments."),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"For this exercise you will make a web interface to the ",(0,i.kt)("inlineCode",{parentName:"p"},"decoder")," class you built in the previous exercise. You can use your solution from the previous exercise or our solution. Note, that for this exercise you are not allowed to use modules. So, if you used modules in the last exercise you can simply comment out any import/export statements in your ",(0,i.kt)("inlineCode",{parentName:"p"},"decoder.js")," file. If you do use your own solution, make sure you copy your JS file into the same folder as the HTML document you are about to complete. You should write your solutions in VSCode (or an editor of your choice). The web page you will create should look and work roughly like this:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"How to do",src:n(58942).Z,width:"582",height:"432"})),(0,i.kt)("p",null,"The application works as follows:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Enter a key, consisting of 26 letters (for now, no validation or error-checking is required)."),(0,i.kt)("li",{parentName:"ul"},"Optionally, enter text to encode or decode"),(0,i.kt)("li",{parentName:"ul"},"When you click the \u201cGo\u201d button, it should encode the text entered in the \u201cText to encode\u201d box, printing it in the \u201cEncoded\u201d box, and the same for \u201cText to decode\u201d and \u201cDecoded\u201d.")),(0,i.kt)("h2",{id:"starter-kit"},"Starter Kit"),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Follow the GitHub Classroom assignment link on Moodle first.")),(0,i.kt)("p",null,"You are provided the ",(0,i.kt)("inlineCode",{parentName:"p"},"decoderRingClass.js")," solution from the last exercise. This file contains the class definition for the ",(0,i.kt)("inlineCode",{parentName:"p"},"decoder")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"decoderRing")," classes. You will use ",(0,i.kt)("inlineCode",{parentName:"p"},"decoder")," in this exercise to encode/decode text the user enters into the interface. You will not need to make any modifications to that file. We also provide a file named ",(0,i.kt)("inlineCode",{parentName:"p"},"index.html")," which doesn\u2019t have much. You will need to update this file to build the user interface for our simple encoder/decoder application."),(0,i.kt)("h2",{id:"todo-1-user-interface"},"TODO #1: User Interface"),(0,i.kt)("p",null,"For this TODO, you need to use HTML tags to design and implement the user interface you see above for the encoder/decoder application. This will require you to use several different tags. Here are the tags that we used to implement the interface:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<h1>")," - header"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<center>")," - this tag is actually deprecated, but is fine to use for now. We will see how to do this properly when we introduce CSS"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<br>")," - this is used for formatting"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<img>")," - this is used for the image, the image can be found at ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/emeryberger/web-programming/raw/master/decoder-ring.jpg"},"https://github.com/emeryberger/web-programming/raw/master/decoder-ring.jpg"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Example: ",(0,i.kt)("inlineCode",{parentName:"li"},"<img src=\u201dURL\u201d alt=\u201ddescription for the blind\u201d>")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<form>")," - for the form itself")),(0,i.kt)("p",null,"You want to nest the labels and other form elements inside of the ",(0,i.kt)("inlineCode",{parentName:"p"},"<form>")," tag:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"<label>")," - for accessibility ",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<label for=\u201dsome_id\u201d>explanation</label>")))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"<input>")," - for input UI components",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<input type=\u201dtext\u201d id=\u201dsome_id\u201d>")),(0,i.kt)("li",{parentName:"ul"},"Use the following IDs:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"key"),(0,i.kt)("li",{parentName:"ul"},"encode, encoded"),(0,i.kt)("li",{parentName:"ul"},"decode, decoded")))))),(0,i.kt)("p",null,"Examples:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'<input type="button" onClick="doIt()" value="Go">\n<label for="encode">Text to encode:</LABEL>\n<input type="text" ID="encode" />\n')),(0,i.kt)("p",null,"You can read up on these tags on the ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element"},"MDN Web Docs"),"."),(0,i.kt)("p",null,"You will find ",(0,i.kt)("inlineCode",{parentName:"p"},"TODO #1")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"index.html")," file."),(0,i.kt)("h2",{id:"todo-2-application-behavior"},"TODO #2: Application Behavior"),(0,i.kt)("p",null,"Now that you have completed ",(0,i.kt)("inlineCode",{parentName:"p"},"TODO #1"),", you have an interface. Let us make this more interesting by adding some behavior to this application. That is, we want to be able to perform the encode/decode operations when we click on the ",(0,i.kt)("inlineCode",{parentName:"p"},"Go")," button. To do this you will need to implement a function called ",(0,i.kt)("inlineCode",{parentName:"p"},"doIt")," inside of the ",(0,i.kt)("inlineCode",{parentName:"p"},"<script>")," tag in the ",(0,i.kt)("inlineCode",{parentName:"p"},"index.html")," file. This function needs to create a new ",(0,i.kt)("inlineCode",{parentName:"p"},"decoder")," object and encode and decode the values from the text boxes in the user interface. Remember, you can get/set the values from the user interface like we do in this example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"encodeStr = document.getElementById('encode').value;\ndocument.getElementById('encoded').value = c.encode(encodeStr);\n")),(0,i.kt)("p",null,"Make sure that the ",(0,i.kt)("inlineCode",{parentName:"p"},"Go")," button calls the ",(0,i.kt)("inlineCode",{parentName:"p"},"doIt")," function when the ",(0,i.kt)("inlineCode",{parentName:"p"},"Go")," button is clicked."),(0,i.kt)("p",null,"You will find ",(0,i.kt)("inlineCode",{parentName:"p"},"TODO #2")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"index.html")," file."),(0,i.kt)("p",null,"That's it! You should now have a working decoder web application! Use VSCode\u2019s Liver Server extension to run your encoder/decoder web application!"))}u.isMDXComponent=!0},58942:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/exercise5-11f8c7bf39e7019cc0a58f99310aeac7.gif"}}]);